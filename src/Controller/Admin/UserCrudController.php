<?php

namespace App\Controller\Admin;

use App\Entity\User;
use EasyCorp\Bundle\EasyAdminBundle\Config\Action;
use EasyCorp\Bundle\EasyAdminBundle\Config\Actions;
use EasyCorp\Bundle\EasyAdminBundle\Config\Crud;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;
use phpDocumentor\Reflection\Types\This;

class UserCrudController extends AbstractCrudController
{
    public static function getEntityFqcn(): string
    {
        return User::class;
    }

    public function configureActions(Actions $actions): Actions
    {
        return parent::configureActions(
            $actions
                ->disable(Action::EDIT, Action::DELETE, Action::NEW)
                ->add(Crud::PAGE_INDEX, Action::DETAIL)
                ->update(Crud::PAGE_INDEX, Action::DETAIL, function (Action $action){
                    return $action->setLabel('Detalle');
                }));
    }

    public function configureCrud(Crud $crud): Crud
    {
        return parent::configureCrud(
            $crud
                ->setPageTitle(Crud::PAGE_INDEX, 'Usuarios')
                ->setEntityPermission('ROLE_ADMIN')
                ->setHelp(Crud::PAGE_INDEX, 'Pestaña deshabilitada.')
                ->setEntityLabelInSingular('Usuario')

        ); // TODO: Change the autogenerated stub
    }

    public function configureFields(string $pageName): iterable
    {
        if(Crud::PAGE_INDEX === $pageName){
            yield TextField::new('email', 'Email');
            yield TextField::new('password', 'Contraseña')->setPermission("ROLE_USER");
        }

        if (Crud::PAGE_DETAIL === $pageName || Crud::PAGE_NEW === $pageName){
            yield TextField::new('email', 'Email');
            yield TextField::new('password', 'Contraseña');
        }
    }

}
